# ░█▀█░▀█▀░█▀▀░█▀█░█▄█░░░░█▀▀░█▀█░█▀█░█▀▀
# ░█▀▀░░█░░█░░░█░█░█░█░░░░█░░░█░█░█░█░█▀▀
# ░▀░░░▀▀▀░▀▀▀░▀▀▀░▀░▀░▀░░▀▀▀░▀▀▀░▀░▀░▀░░
#
#  X compositor configuration


#picom by https://github.com/manilarome/the-glorious-dotfiles/blob/master/config/picom.conf

# Backend
#################################


#################################
# GLX backend
#################################

# glx-no-stencil = true;

# GLX backend: Copy unmodified regions from front buffer instead of redrawing them all.
# Useful with --glx-swap-method, as well.
glx-copy-from-front = false;

# GLX backend: Use MESA_copy_sub_buffer to do partial screen update.
# May break VSync and is not available on some drivers.
# Overrides --glx-copy-from-front.
# glx-use-copysubbuffermesa = true;

# GLX backend: Avoid rebinding pixmap on window damage.
# Probably could improve performance on rapid window content changes, but is known to break things on some drivers (LLVMpipe).
# Recommended if it works.
# glx-no-rebind-pixmap = true;


# GLX backend: GLX buffer swap method we assume.
# Could be undefined (0), copy (1), exchange (2), 3-6, or buffer-age (-1).
# undefined is the slowest and the safest, and the default value.
# copy is fastest, but may fail on some drivers,
# 2-6 are gradually slower but safer (6 is still faster than 0).
# Usually, double buffer means 2, triple buffer means 3.
# buffer-age means auto-detect using GLX_EXT_buffer_age, supported by some drivers.
# Useless with --glx-use-copysubbuffermesa.
# Partially breaks --resize-damage.
# Defaults to undefined.
#glx-swap-method = "undefined";

# ░█▀▀░█░█░█▀█░█▀▄░█▀█░█░█
# ░▀▀█░█▀█░█▀█░█░█░█░█░█▄█
# ░▀▀▀░▀░▀░▀░▀░▀▀░░▀▀▀░▀░▀

shadow = true;
shadow-radius = 20;
shadow-opacity = 0.5;
#shadow-offset-x = -12;
shadow-offset-x = 1;
#shadow-offset-y = -12;
shadow-offset-y = 1;

# shadow-red = 0
# shadow-green = 0
# shadow-blue = 0
shadow-color = "#000000";

shadow-exclude = [
	"name = 'Notification'",
	"class_g = 'Conky'",
	"class_g ?= 'Notify-osd'",
	"class_g = 'Cairo-clock'",
	"class_g = 'slop'",
	"class_g = 'Firefox' && argb",
	"class_g = 'Rofi'",
	"_GTK_FRAME_EXTENTS@:c",
	"_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'"
];

# shadow-exclude-reg = "x10+0+0";
# xinerama-shadow-crop = true;

# ░█▀▀░█▀█░█▀▄░▀█▀░█▀█░█▀▀
# ░█▀▀░█▀█░█░█░░█░░█░█░█░█
# ░▀░░░▀░▀░▀▀░░▀▀▀░▀░▀░▀▀▀

# Fade windows during opacity changes.
fading = true;
# Opacity change between steps while fading in. (default 0.028).
fade-in-step = 0.1;
# Opacity change between steps while fading out. (default 0.03).
fade-out-step = 0.1;
# The time between steps in a fade in milliseconds. (default 10).
fade-delta = 10;

fade-exclude = [];

# Opacity change between steps while fading out. (default 0.03).
no-fading-openclose = false;
no-fading-destroyed-argb = true;

# ░█▀█░█▀█░█▀█░█▀▀░▀█▀░▀█▀░█░█
# ░█░█░█▀▀░█▀█░█░░░░█░░░█░░░█░
# ░▀▀▀░▀░░░▀░▀░▀▀▀░▀▀▀░░▀░░░▀░

inactive-opacity = 1;
frame-opacity = 1;
inactive-opacity-override = false;
active-opacity = 1.0;
inactive-dim = 0.0;

#focus-exclude = [
#	"class_g = 'Cairo-clock'",
#	"class_g ?= 'rofi'",
#	"class_g ?= 'slop'",
#	"class_g ?= 'Steam'"
#];

# inactive-dim-fixed = 1.0;

opacity-rule = [ 
	"80:class_g = 'URxvt'",
	"80:class_g = 'UXTerm'",
	"80:class_g = 'kitty'",
	"100:class_g    = 'code-oss'",
	"95:class_g     = 'Polybar'"
]

# ░█▀▄░█░░░█░█░█▀▄░█▀▄░▀█▀░█▀█░█▀▀
# ░█▀▄░█░░░█░█░█▀▄░█▀▄░░█░░█░█░█░█
# ░▀▀░░▀▀▀░▀▀▀░▀░▀░▀░▀░▀▀▀░▀░▀░▀▀▀

blur: {
	method = "dual_kawase";
    strength = 5.0;
	deviation = 1.0;
	kernel = "11x11gaussian";
}

blur-background = false;
blur-background-frame = true;
blur-background-fixed = true;
# blur-kern = "3x3box";

blur-background-exclude = [
	"class_g = 'slop'",
	"class_g = 'Firefox' && argb",
	"name = 'rofi - Global Search'",
	"_GTK_FRAME_EXTENTS@:c"
];

# ░█▀▀░█▀▀░█▀█░█▀▀░█▀▄░█▀█░█░░░░░█▀▀░█▀▀░▀█▀░▀█▀░▀█▀░█▀█░█▀▀░█▀▀
# ░█░█░█▀▀░█░█░█▀▀░█▀▄░█▀█░█░░░░░▀▀█░█▀▀░░█░░░█░░░█░░█░█░█░█░▀▀█
# ░▀▀▀░▀▀▀░▀░▀░▀▀▀░▀░▀░▀░▀░▀▀▀░░░▀▀▀░▀▀▀░░▀░░░▀░░▀▀▀░▀░▀░▀▀▀░▀▀▀

daemon = false;
backend = "glx";
vsync = true;
dbus = false;
mark-wmwin-focused = true;
mark-ovredir-focused = true;
detect-rounded-corners = true;
detect-client-opacity = true;
refresh-rate = 60;
# use-ewmh-active-win = true;
# unredir-if-possible = false;
# unredir-if-possible-delay = 0;

unredir-if-possible-exclude = [];

detect-transient = true;
detect-client-leader = true;
resize-damage = 1;

invert-color-include = [];

glx-no-stencil = true;
# glx-no-rebind-pixmap = false;
use-damage = true;

# Use X Sync fence to sync clients' draw calls. Needed on nvidia-drivers with GLX backend for some users.
xrender-sync-fence = true;

# glx-fshader-win = "";
# force-win-blend = false;

# no-ewmh-fullscreen = false;
# max-brightness = 1.0;

transparent-clipping = false;

log-level = "warn";
log-file = "~/.cache/picom-log.log";
show-all-xerrors = true;
# write-pid-path = '/path/to/your/log/file';

wintypes: {
	tooltip = { fade = true; shadow = false; focus = false; };
	normal = { shadow = false; };
	dock = { shadow = false; };
	dnd = { shadow = false; };
	popup_menu = { shadow = true; focus = false; opacity = 0.90; };
	dropdown_menu = { shadow = false; focus = false; };
	above = { shadow = true; };
	splash = { shadow = false; };
	utility = { focus = false; shadow = false; blur-background = false; };
	notification = { shadow = false; };
	desktop = { shadow = false; blur-background = false; };
	menu = { focus = false; };
	dialog = { shadow = true; };
};
